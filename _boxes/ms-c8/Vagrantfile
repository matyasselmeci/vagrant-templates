# -*- mode: ruby -*-
# vi: set ft=ruby :

# Comment this out if not using a host-only network
class VagrantPlugins::ProviderVirtualBox::Action::Network
  def dhcp_server_matches_config?(dhcp_server, config)
    true
  end
end

Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  #config.vm.box = "centos/8"
  config.vm.box = "centos/stream8"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  config.vm.network "private_network", type: "dhcp"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder ".", "/vagrant", type: "rsync"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  config.vm.provision "shell", inline: <<-SHELL
    rpm --import /etc/pki/rpm-gpg/*
    mkdir -p /etc/ansible
    [[ -e /etc/ansible/hosts ]] || \
      echo "localhost ansible_connection=local" > /etc/ansible/hosts
    yum -y -d1 install epel-release centos-release-ansible-29
    yum -y -d1 install ansible-collection-ansible-posix ansible-collection-community-general --exclude=ansible-core
  SHELL

  config.vm.provision "shell", inline: <<-SHELL
    yum -y distro-sync --exclude=\*kernel\* --exclude=\*firmware\* --exclude=ansible-core
  SHELL

  config.vm.provision :ansible_local do |ans|
    ans.playbook = "playbook.yml"
    ans.limit = "all"
    ans.verbose = false
    ans.inventory_path = "inventory"
    ans.compatibility_mode = "2.0"
  end

  config.vm.provision "shell", inline: <<-SHELL
    yum -y autoremove
  SHELL
end

